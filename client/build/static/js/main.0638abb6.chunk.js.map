{"version":3,"sources":["hooks/context.hook.js","common/NavPanel.jsx","hooks/http.hook.js","hooks/auth.hook.js","authentication/SignIn.jsx","authentication/SignUp.jsx","home/Home.jsx","user_profile/UserProfile.jsx","companies/CreateCompany.jsx","companies/ViewCompanies.jsx","user_profile/EditProfile.jsx","user_profile/DeleteAccount.jsx","companies/CompanyPage.jsx","common/AppRouter.jsx","App.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","signIn","signOut","NavPanel","history","useHistory","ctx","useContext","Navbar","bg","variant","Brand","href","Nav","className","Link","to","Form","inline","FormControl","type","placeholder","Button","onClick","push","sendRequest","url","method","a","body","headers","JSON","stringify","fetch","storageName","useAuth","useState","setToken","setUserId","useCallback","jwtToken","id","localStorage","setItem","removeItem","useEffect","data","parse","getItem","SignIn","useForm","register","handleSubmit","errors","formState","message","setMessage","onSubmit","then","res","status","json","go","Group","Label","Control","name","required","pattern","value","render","Alert","Heading","SignUp","minLength","Home","UserProfile","username","setUsername","email","setEmail","createdAt","setCreatedAt","moment","format","Card","Header","src","width","height","hspace","alt","Body","Title","Text","Footer","CreateCompany","controlId","as","ViewCompanies","companyName","description","companies","setCompanies","map","item","key","border","style","EditProfile","DeleteAccount","CompanyPage","companyId","queryString","window","location","search","bonusList","subject","amountOfMoney","updatedAt","company","setCompany","AppRouter","Provider","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0638abb6.chunk.js","sourcesContent":["import {createContext} from \"react\"\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    signIn:  noop,\r\n    signOut: noop,\r\n})","import React, {useContext} from 'react'\r\nimport {Button, Form, FormControl, Nav, Navbar} from \"react-bootstrap\"\r\nimport {Link, useHistory} from \"react-router-dom\"\r\nimport {AuthContext} from \"../hooks/context.hook\"\r\n\r\nexport const NavPanel = () => {\r\n    const history = useHistory()\r\n    const ctx = useContext(AuthContext)\r\n\r\n    const signOutHandler = () => {\r\n        ctx.signOut()\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/\">Home</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n\r\n                {ctx.token &&\r\n                <>\r\n                    <Nav.Link>\r\n                        <Link to=\"/viewcompanies\">\r\n                            Companies\r\n                        </Link>\r\n                    </Nav.Link>\r\n                </>}\r\n                {ctx.token &&\r\n                <>\r\n                    <Nav.Link>\r\n                        <Link to=\"/createcompany\">\r\n                            Create Company\r\n                        </Link>\r\n                    </Nav.Link>\r\n                </>}\r\n\r\n                <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\r\n                    <Button variant=\"outline-info mr-sm-2\">Search</Button>\r\n                </Form>\r\n            </Nav>\r\n\r\n            {!ctx.token\r\n                ? (<>\r\n                    <Button variant=\"outline-info mr-sm-2\" onClick={() => history.push('/signin')}>Sign In</Button>\r\n                    <Button variant=\"outline-info\" onClick={() => history.push('/signup')}>Sign Up</Button>\r\n                </>)\r\n                : (<>\r\n                    <Button variant=\"outline-info mr-sm-2\" onClick={() => history.push('/profile')}>Profile</Button>\r\n                    <Button variant=\"outline-info\" onClick={signOutHandler}>Sign Out</Button>\r\n                </>)}\r\n\r\n\r\n        </Navbar>\r\n    )\r\n}\r\n","export const sendRequest = async (url, method, body = null, headers = {}) => {\r\n    if (body) {\r\n        body = JSON.stringify(body)\r\n        headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    return await fetch(url, {\r\n        method: method,\r\n        body: body,\r\n        headers: headers\r\n    })\r\n}\r\n\r\n\r\n\r\n","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const signIn = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            token: jwtToken, userId: id\r\n        }))\r\n    }, [])\r\n\r\n    const signOut = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            signIn(data.token, data.userId)\r\n        }\r\n    }, [signIn])\r\n\r\n    return {signIn, signOut, token, userId}\r\n}","import React, {useState} from \"react\"\r\nimport {Alert, Button, Form} from \"react-bootstrap\"\r\nimport {useForm} from \"react-hook-form\"\r\nimport {ErrorMessage} from \"@hookform/error-message\"\r\nimport {sendRequest} from \"../hooks/http.hook\"\r\nimport {useAuth} from \"../hooks/auth.hook\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport './index.css'\r\n\r\n\r\nexport const SignIn = () => {\r\n    const history = useHistory()\r\n    const {signIn} = useAuth()\r\n    const {register, handleSubmit, formState: {errors}} = useForm()\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const onSubmit = data => sendRequest('/signin', 'POST', data)\r\n        .then(res => {\r\n            if (res.status >= 400) res.json().then(ctx => setMessage(ctx.message))\r\n            else {\r\n                res.json().then(ctx => signIn(ctx.token, ctx.userId))\r\n                history.push('/')\r\n                history.go(0)\r\n            }\r\n        })\r\n\r\n    return (\r\n        <div className=\"row mt-2 justify-content-center\">\r\n            <div className=\"col-4\">\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"text-center font-weight-bold\">SIGN IN</div>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            name=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            {...register(\"email\", {\r\n                                required: \"Email is required\",\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: 'Incorrect email address'\r\n                                }\r\n                            })}/>\r\n                        <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"email\"\r\n                            render={({message}) => <span className=\"err\">{message}</span>}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            {...register(\"password\", {required: \"Password is required\"})}/>\r\n                        <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"password\"\r\n                            render={({message}) => <span className=\"err\">{message}</span>}/>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"alert-success\" type=\"submit\">\r\n                        Sign In\r\n                    </Button>\r\n\r\n                    <div className=\"mt-2\">Don't have account? <a href=\"/signup\">Create an account here</a>.</div>\r\n\r\n                    <Alert className=\"info\">\r\n                        <Alert.Heading>{message}</Alert.Heading>\r\n                    </Alert>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\r\nimport {Alert, Button, Form} from \"react-bootstrap\"\r\nimport {useForm} from \"react-hook-form\"\r\nimport {ErrorMessage} from '@hookform/error-message'\r\nimport {sendRequest} from \"../hooks/http.hook\"\r\nimport './index.css'\r\n\r\nexport const SignUp = () => {\r\n    const [message, setMessage] = useState(null)\r\n    const {register, handleSubmit, formState: {errors}} = useForm()\r\n\r\n    const onSubmit = data => sendRequest('/signup', 'POST', data)\r\n        .then(res => res.json().then(ctx => setMessage(ctx.message)))\r\n\r\n    return (\r\n\r\n        <div className=\"row mt-2 justify-content-center\">\r\n            <div className=\"col-4\">\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"text-center font-weight-bold\">SIGN UP</div>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            name=\"username\"\r\n                            placeholder=\"Enter username\"\r\n                            {...register(\"username\", {required: \"Username is required\"})}/>\r\n                        <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"username\"\r\n                            render={({message}) => <span className=\"err\">{message}</span>}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            name=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            {...register(\"email\", {\r\n                                required: \"Email is required\",\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: 'Incorrect email address'\r\n                                }\r\n                            })}/>\r\n                        <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"email\"\r\n                            render={({message}) => <span className=\"err\">{message}</span>}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            {...register(\"password\", {\r\n                                required: \"Password is required\",\r\n                                minLength: {\r\n                                    value: 8,\r\n                                    message: \"Short password\"\r\n                                }\r\n                            })}/>\r\n                        <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"password\"\r\n                            render={({message}) => <span className=\"err\">{message}</span>}/>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"alert-primary mr-2\" type=\"submit\">\r\n                        Sign Up\r\n                    </Button>\r\n\r\n                    <Alert className=\"info\">\r\n                        <Alert.Heading>{message}</Alert.Heading>\r\n                    </Alert>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport const Home = () => {\r\n    return(\r\n        <h2>\r\n            <ul>Last updates</ul>\r\n            <ul>Companies with biggest score</ul>\r\n        </h2>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from \"react\"\r\nimport {AuthContext} from \"../hooks/context.hook\"\r\nimport {Button, Card} from \"react-bootstrap\"\r\nimport {sendRequest} from \"../hooks/http.hook\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {Link} from \"react-router-dom\"\r\nimport moment from \"moment\"\r\n\r\n\r\nexport const UserProfile = () => {\r\n    const history = useHistory()\r\n    const ctx = useContext(AuthContext)\r\n    const [username, setUsername] = useState(null)\r\n    const [email, setEmail] = useState(null)\r\n    const [createdAt, setCreatedAt] = useState(null)\r\n\r\n    useEffect(() => {\r\n        sendRequest('/profile', 'POST', {userId: ctx.userId})\r\n            .then(res => res.json().then(data => {\r\n                setUsername(data.username)\r\n                setEmail(data.email)\r\n                setCreatedAt(moment(data.createdAt).format('DD.MM.YYYY HH:mm'))\r\n            }))\r\n    }, [ctx])\r\n\r\n    return (\r\n        <div className=\"row mt-2 justify-content-center\">\r\n            <div className=\"col-4\">\r\n                {!ctx.token\r\n                    ?\r\n                    <>\r\n                        <h1>Please Sign In <Link to=\"/signin\">HERE</Link>\r\n                        </h1>\r\n                    </>\r\n                    : <>\r\n                        <Card className=\"text-center\">\r\n                            <Card.Header>\r\n                                User Profile\r\n                                <img src=\"https://freesvg.org/img/abstract-user-flat-4.png\"\r\n                                     width=\"25\"\r\n                                     height=\"25\"\r\n                                     hspace=\"5\"\r\n                                     alt=\"User\"/>\r\n                            </Card.Header>\r\n\r\n                            <Card.Body>\r\n                                <Card.Title>Username: {username}</Card.Title>\r\n                                <Card.Text>Email: {email}</Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <Card.Footer className=\"text-muted\">Created AT: {createdAt}</Card.Footer>\r\n\r\n                            <Button className=\"primary\" onClick={() => history.push('/editprofile')}>\r\n                                Edit Profile\r\n                            </Button>\r\n\r\n                            <Button className=\"primary mt-2\" onClick={() => history.push('/deleteaccount')}>\r\n                                Delete Account\r\n                            </Button>\r\n                        </Card>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useContext, useState} from \"react\"\r\nimport {AuthContext} from \"../hooks/context.hook\"\r\nimport {Alert, Button, Form} from \"react-bootstrap\"\r\nimport {ErrorMessage} from \"@hookform/error-message\"\r\nimport {useForm} from \"react-hook-form\"\r\nimport {sendRequest} from \"../hooks/http.hook\"\r\n\r\nexport const CreateCompany = () => {\r\n    const ctx = useContext(AuthContext)\r\n    const [message, setMessage] = useState(null)\r\n    const {register, handleSubmit, formState: {errors}} = useForm()\r\n    const onSubmit = data => {\r\n        data.userId = ctx.userId\r\n        sendRequest('/createcompany', 'POST', data).then(res => res.json().then(ctx => setMessage(ctx.message)))\r\n    }\r\n\r\n    return(\r\n        <div className=\"row mt-2 justify-content-center\">\r\n            <div className=\"col-4\">\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"text-center font-weight-bold\">CREATE COMPANY</div>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            name=\"name\"\r\n                            placeholder=\"Enter name\"\r\n                            {...register(\"name\", {\r\n                                required: \"Name is required\"\r\n                            })}/>\r\n                        <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"name\"\r\n                            render={({message}) => <span className=\"err\">{message}</span>}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Bonuses</Form.Label>\r\n                        <Form.Control\r\n                            name=\"bonusList\"\r\n                            placeholder=\"Enter bonuses\"\r\n                            {...register(\"bonusList\", {required: false})}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Short Description</Form.Label>\r\n                        <Form.Control\r\n                            name=\"description\"\r\n                            placeholder=\"Enter description\"\r\n                            {...register(\"description\", {required: false})}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Subject</Form.Label>\r\n                        <Form.Control\r\n                            name=\"subject\"\r\n                            as=\"select\"\r\n                            {...register(\"subject\")}>\r\n                            <option>Electronics</option>\r\n                            <option>Education</option>\r\n                            <option>Sport</option>\r\n                            <option>TV</option>\r\n                            <option>Games</option>\r\n                            <option>Shop</option>\r\n                            <option>Music</option>\r\n                            <option>Development</option>\r\n                            <option>Other</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Amount Of Money $</Form.Label>\r\n                        <Form.Control\r\n                            name=\"amountOfMoney\"\r\n                            placeholder=\"Enter amount of money\"\r\n                            {...register(\"amountOfMoney\", {\r\n                                required: \"Amount of money is required\",\r\n                                pattern: {\r\n                                    value: /^[0-9]/i,\r\n                                    message: 'Must be a number'\r\n                                }\r\n                            })}/>\r\n                        <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"amountOfMoney\"\r\n                            render={({message}) => <span className=\"err\">{message}</span>}/>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"alert-success\" type=\"submit\">\r\n                        Create\r\n                    </Button>\r\n\r\n                    <Alert className=\"info\">\r\n                        <Alert.Heading>{message}</Alert.Heading>\r\n                    </Alert>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Card} from \"react-bootstrap\"\r\nimport {sendRequest} from \"../hooks/http.hook\"\r\nimport {Link} from \"react-router-dom\"\r\nimport moment from \"moment\"\r\n\r\nexport const ViewCompanies = () => {\r\n    const [companies, setCompanies] = useState([{\r\n        companyName: null,\r\n        description: null,\r\n        createdAt: null\r\n    }])\r\n\r\n    useEffect(() => {\r\n        sendRequest('/viewcompanies', 'GET')\r\n            .then(res => res.json().then(data => setCompanies(data.companies)))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"row mt-2 ml-1\">\r\n            {companies.map((item, key) =>\r\n                <Card\r\n                    key={key}\r\n                    className=\"ml-1 mt-1\"\r\n                    border=\"primary\"\r\n                    style={{width: '23rem'}}>\r\n                    <Card.Body>\r\n\r\n                        <Card.Title>{item.companyName}</Card.Title>\r\n\r\n                        <Card.Text>\r\n                            Description: {item.description}\r\n                        </Card.Text>\r\n\r\n                        <Card.Text>\r\n                            CreatedAt: {moment(item.createdAt).format('DD.MM.YYYY HH:mm')}\r\n                        </Card.Text>\r\n                        <Link to={`/company?id=${item.id}`}>\r\n                            <Button>View More</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, {useContext, useState} from \"react\"\r\nimport {Alert, Button, Form} from \"react-bootstrap\"\r\nimport {ErrorMessage} from \"@hookform/error-message\"\r\nimport {useForm} from \"react-hook-form\"\r\nimport {sendRequest} from \"../hooks/http.hook\"\r\nimport {AuthContext} from \"../hooks/context.hook\"\r\n\r\n\r\nexport const EditProfile = () => {\r\n    const ctx = useContext(AuthContext)\r\n    const {register, handleSubmit, formState: {errors}} = useForm()\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const onSubmit = data => {\r\n        if (data.username === '' && data.email === '') {\r\n            setMessage('Enter some data to update you profile')\r\n        } else {\r\n            setMessage(null)\r\n            data.userId = ctx.userId\r\n            sendRequest('/editprofile', 'POST', data)\r\n                .then(res => res.json()\r\n                .then(ctx => setMessage(ctx.message)))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row mt-2 justify-content-center\">\r\n            <div className=\"col-4\">\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"text-center font-weight-bold\">EDIT USER PROFILE</div>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            name=\"username\"\r\n                            placeholder=\"Enter new username\"\r\n                            {...register(\"username\")}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            name=\"email\"\r\n                            placeholder=\"Enter new email\"\r\n                            {...register(\"email\", {\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: 'Incorrect email address'\r\n                                }\r\n                            })}/>\r\n                        <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"email\"\r\n                            render={({message}) => <span className=\"err\">{message}</span>}/>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"alert-primary mr-2\" type=\"submit\">\r\n                        Update Profile\r\n                    </Button>\r\n\r\n                    <Alert className=\"info\">\r\n                        <Alert.Heading>{message}</Alert.Heading>\r\n                    </Alert>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useContext} from \"react\"\r\nimport {Button} from \"react-bootstrap\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {AuthContext} from \"../hooks/context.hook\"\r\nimport {sendRequest} from \"../hooks/http.hook\"\r\n\r\nexport const DeleteAccount = () => {\r\n    const history = useHistory()\r\n    const ctx = useContext(AuthContext)\r\n\r\n    const deleteAccountHandler = () => {\r\n        sendRequest('/deleteaccount', 'POST', {userId: ctx.userId})\r\n            .then(() => {\r\n                ctx.signOut()\r\n                history.push('/')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-2 justify-content-center\">\r\n            <div className=\"col-4\">\r\n                <h1>Are you sure to delete account ?</h1>\r\n\r\n                <Button className=\"alert-danger mr-2\" onClick={deleteAccountHandler}>\r\n                    YES\r\n                </Button>\r\n\r\n                <Button className=\"alert-success\" onClick={() => history.push('/profile')}>\r\n                    NO\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport queryString from 'query-string'\r\nimport {sendRequest} from \"../hooks/http.hook\"\r\nimport {Card} from \"react-bootstrap\"\r\nimport moment from \"moment\"\r\n\r\n\r\nexport const CompanyPage = () => {\r\n    const companyId = queryString.parse(window.location.search)\r\n    const [company, setCompany] = useState({\r\n        companyName: null,\r\n        bonusList: null,\r\n        description: null,\r\n        subject: null,\r\n        amountOfMoney: null,\r\n        createdAt: null,\r\n        updatedAt: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        sendRequest('/company', 'POST', {companyId: companyId.id})\r\n            .then(res => res.json().then(data => setCompany(data.company)))\r\n    })\r\n\r\n    return (\r\n        <div className=\"row mt-2 justify-content-center\">\r\n            <div className=\"col-4\">\r\n                <Card className=\"text-center\">\r\n\r\n                    <Card.Header>\r\n                        Company Profile\r\n                        <img src=\"https://www.svgrepo.com/show/12496/users.svg\"\r\n                             width=\"25\"\r\n                             height=\"25\"\r\n                             hspace=\"5\"\r\n                             alt=\"Company\"/>\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>{company.companyName}</Card.Title>\r\n\r\n                        <Card.Text>Description: {company.description}</Card.Text>\r\n\r\n                        <Card.Text>Bonus List: {company.bonusList}</Card.Text>\r\n\r\n                        <Card.Text>Subject: {company.subject}</Card.Text>\r\n\r\n                        <Card.Text>Amount Of Money: {company.amountOfMoney}</Card.Text>\r\n                    </Card.Body>\r\n\r\n                    <Card.Footer className=\"text-muted\">\r\n                        Created At: {moment(company.createdAt).format('DD.MM.YYYY HH:mm')}\r\n                    </Card.Footer>\r\n\r\n                    <Card.Footer className=\"text-muted\">\r\n                        Last Update: {moment(company.updatedAt).format('DD.MM.YYYY HH:mm')}\r\n                    </Card.Footer>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport {NavPanel} from './NavPanel'\r\nimport {SignIn} from \"../authentication/SignIn\"\r\nimport {SignUp} from \"../authentication/SignUp\"\r\nimport {Home} from \"../home/Home\"\r\nimport {AuthContext} from \"../hooks/context.hook\"\r\nimport {useAuth} from \"../hooks/auth.hook\"\r\nimport {UserProfile} from \"../user_profile/UserProfile\"\r\nimport {CreateCompany} from \"../companies/CreateCompany\"\r\nimport {ViewCompanies} from \"../companies/ViewCompanies\"\r\nimport {EditProfile} from \"../user_profile/EditProfile\"\r\nimport {DeleteAccount} from \"../user_profile/DeleteAccount\"\r\nimport {CompanyPage} from \"../companies/CompanyPage\"\r\n\r\n\r\nexport const AppRouter = () => {\r\n    const {token, userId, signIn, signOut} = useAuth()\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            token, userId, signIn, signOut\r\n        }}>\r\n            <BrowserRouter>\r\n                <NavPanel/>\r\n                <Switch>\r\n                    <Route path=\"/createcompany\">\r\n                        <CreateCompany/>\r\n                    </Route>\r\n                    <Route path=\"/company\">\r\n                        <CompanyPage/>\r\n                    </Route>\r\n                    <Route path=\"/viewcompanies\">\r\n                        <ViewCompanies/>\r\n                    </Route>\r\n                    <Route path=\"/editprofile\">\r\n                        <EditProfile/>\r\n                    </Route>\r\n                    <Route path=\"/deleteaccount\">\r\n                        <DeleteAccount/>\r\n                    </Route>\r\n                    <Route path=\"/profile\">\r\n                        <UserProfile/>\r\n                    </Route>\r\n                    <Route path=\"/signin\">\r\n                        <SignIn/>\r\n                    </Route>\r\n                    <Route path=\"/signup\">\r\n                        <SignUp/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home/>\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\"\nimport { AppRouter } from \"./common/AppRouter\";\n\nfunction App() {\n  return (\n    <AppRouter />\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}